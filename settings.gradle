pluginManagement {
  repositories {
    mavenCentral()
    mavenLocal()
    google()
    jcenter()

    gradlePluginPortal()

    maven {
      name 'JCenter Gradle Plugins repository'
      url 'https://dl.bintray.com/gradle/gradle-plugins'
    }
    maven {
      name 'Sonatype Snapshots repository'
      url 'https://oss.sonatype.org/content/repositories/snapshots/'
    }
    maven {
      name 'Gradle repository'
      url 'https://plugins.gradle.org/m2/'
    }
  }
}

// build scan plugin can only be applied in settings file
plugins {
  id('com.gradle.enterprise') version '3.5.2'
  id("com.gradle.enterprise.gradle-enterprise-conventions-plugin").version("0.7.2")
}

gradleEnterprise {
  buildScan {
    publishAlways()
    termsOfServiceUrl = 'https://gradle.com/terms-of-service'
    termsOfServiceAgree = 'yes'
  }
}

rootProject.name = 'gradle-java-sample'

// Find the directories containing a "build.gradle" file in the root directory
// of the project. That is, every directory containing a "build.gradle" will
// be automatically the subproject of this project.
def subDirs = rootDir.listFiles(new FileFilter() {
  boolean accept(File file) {
    if (!file.isDirectory()) {
      return false
    }
    if (file.name == 'buildSrc') {
      return false
    }
    return new File(file, 'build.gradle').isFile()
  }
})

subDirs.each { File dir ->
  if (dir.name.startsWith("gradle-")) {
    include dir.name
  }

  include 'appflow'
  include 'testflow'
  include 'protobuf'
  include 'flatbuffers'
  include 'avro'
  include 'thrift'
  include 'codecheck'
  include 'db-schema'
}

//rootProject.children.forEach {
//  it.projectDir = rootDir.resolve( "subprojects/${it.name}")
//}
