apply plugin: 'java'
apply plugin: 'maven-publish'

afterEvaluate {
  publishing {
    publications {
      mavenJava(MavenPublication) {
        groupId = GROUP
        artifactId = POM_ARTIFACT_ID
        version = VERSION_NAME

        artifact sourcesJar
        artifact javadocJar
        from components.java

        pom {
          name = POM_NAME
          packaging = POM_PACKAGING
          description = POM_DESCRIPTION
          url = POM_URL

          scm {
            url = POM_SCM_URL
            connection = POM_SCM_CONNECTION
            developerConnection = POM_SCM_DEV_CONNECTION
          }
          licenses {
            license {
              name = POM_LICENCE_NAME
              url = POM_LICENCE_URL
              distribution = POM_LICENCE_DIST
            }
          }
          developers {
            developer {
              id = POM_DEVELOPER_ID
              name = POM_DEVELOPER_NAME
            }
          }
        }

        versionMapping {
          usage('java-runtime') {
            fromResolutionResult()
          }
        }
      }
    }

    repositories {
      maven {
        credentials {
          username "$System.env.BINTRAY_USER"
          password "$System.env.BINTRAY_API_KEY"
        }
        url = VERSION_NAME.endsWith('SNAPSHOT') ? SNAPSHOT_REPOSITORY : RELEASE_REPOSITORY
      }
    }
  }
}

task sourcesJar(type: Jar, dependsOn: classes) {
  //noinspection GroovyAccessibility //alternatively replace this with archiveClassifier.set('...')
  archiveClassifier.set('sources')
  from sourceSets.main.allSource, 'build/generated/source/kapt/main', 'build/generated/source/kaptKotlin/main'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  //noinspection GroovyAccessibility //alternatively replace this with archiveClassifier.set('...')
  archiveClassifier.set('javadoc')
  from javadoc.destinationDir
}

task javadoc(type: Javadoc) {
  classpath += configurations.javadocDeps
  destinationDir = file("../javadoc/")
  // Javadoc will error out for terrible reasons. We can't let it break the build indiscriminately
  failOnError false

  options.charSet = 'UTF-8'
  // The JDK 8 doc lint tool is useless for validating html. Disable just that.
  // Credit for this solution goes to http://blog.joda.org/2014/02/turning-off-doclint-in-jdk-8-javadoc.html
  // Incidentally, I have no idea what the second parameter ('-quiet') means in this context.
  options.addStringOption('Xdoclint:all,-html', '-quiet')
}

task mergedJavadoc(type: Javadoc, description: 'Creates Javadoc from all the projects.') {
  title = 'All modules'
  destinationDir = new File(project.buildDir, 'merged-javadoc')

  // Note: The closures below are executed lazily.
  source {
    subprojects*.sourceSets*.main*.allSource
  }
  classpath.from {
    subprojects*.configurations*.compile*.copyRecursive({ !(it instanceof ProjectDependency); })*.resolve()
  }
}

artifacts {
  archives jar
  archives sourcesJar
  archives javadocJar
}
