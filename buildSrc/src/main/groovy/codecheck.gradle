apply plugin: 'checkstyle'
apply plugin: 'findbugs'
apply plugin: 'pmd'

check.dependsOn 'checkstyle', 'pmd', 'findbugs'

task checkstyle(type: Checkstyle) {
  configFile file("${project.rootDir}/codecheck/checkstyle/checkstyle.xml")
  source 'src'
  include '**/*.java'
  exclude '**/gen/**'

  classpath = files()

  reports {
    xml.enabled = true
    xml.destination = "$project.buildDir/outputs/checkstyle-results.xml"
  }
}

task findbugs(type: FindBugs) {
  ignoreFailures = true
  effort = "max"
  reportLevel = "high"
  excludeFilter = new File("${project.rootDir}/gradle/findbugs/findbugs-filter.xml")
  classes = files("$project.buildDir/intermediates/classes/") as DefaultTask

  source 'src'
  include '**/*.java'
  exclude '**/gen/**'

  reports {
    xml.enabled = false
    xml.destination = "$project.buildDir/reports/findbugs/findbugs.xml"
    xml.withMessages = true

    html.enabled = true
    html.destination = "$project.buildDir/reports/findbugs/findbugs.html"
  }

  classpath = files()
}

task pmd(type: Pmd) {
  ruleSetFiles = files("${project.rootDir}/gradle/pmd/pmd-ruleset.xml")
  ignoreFailures = true
  ruleSets = ["java-basic", "java-braces", "java-strings"]

  source 'src'
  include '**/*.java'
  exclude '**/gen/**'

  reports {
    xml.enabled = true
    xml.destination = "$project.buildDir/reports/pmd/pmd.xml"

    html.enabled = true
    html.destination = "$project.buildDir/reports/pmd/pmd.html"
  }
}
