import org.gradle.api.tasks.testing.logging.TestExceptionFormat

buildscript {
  repositories {
    mavenCentral()
    mavenLocal()
    google()
    jcenter()

    maven {
      url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
}

plugins {
  id("org.jetbrains.dokka") apply false
  id("com.github.johnrengelman.shadow") apply false
  id("com.github.ben-manes.versions")

  id("org.sonarqube")

  id("java")
  id("maven")
}

allprojects {
  apply plugin: 'com.github.johnrengelman.shadow'
  apply plugin: 'java'
  apply plugin: 'idea'
}

subprojects {
  group 'io.nullables.api.sample'
  version '1.0.0-SNAPSHOT'

  project.buildDir = "${rootProject.buildDir}/${project.name}"
  //project.evaluationDependsOn(':app')

  apply plugin: 'java'
  apply plugin: 'groovy'
  sourceCompatibility = JavaVersion.VERSION_1_8
  targetCompatibility = JavaVersion.VERSION_1_8

  repositories {
    mavenCentral()
    jcenter()
  }

  dependencies {
    //implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation 'com.google.guava:guava:23.0'

    testCompile 'org.mockito:mockito-core:2.11.0'
    testCompile group: 'org.spockframework', name: 'spock-core', version: '1.2-groovy-2.5'
    testCompile group: 'org.spockframework', name: 'spock-spring', version: '1.2-groovy-2.5'

    testImplementation 'junit:junit:4.13-beta-3'
  }

  test {
    useJUnitPlatform()

    testLogging {
      showExceptions = true
      showStandardStreams = true
      exceptionFormat = TestExceptionFormat.FULL
    }
  }
}

ext {
  coreVersion = "1.3.1-alpha02"
  extJUnitVersion = "1.1.3-alpha02"
  runnerVersion = "1.3.1-alpha02"
  hamcrestVersion = "1.3"
  truthVersion = "1.0.1"
}

task stage(dependsOn: ['clean'])

task copyToLib(type: Copy) {
  from "$buildDir/libs"
  into "$rootProject.buildDir/libs"
}
copyToLib.dependsOn(stage)
stage.dependsOn(copyToLib)

task copyLicense {
  outputs.file new File("$buildDir/LICENSE.txt")
  doLast {
    copy {
      from "LICENSE.txt"
      into "$buildDir"
    }
  }
}
