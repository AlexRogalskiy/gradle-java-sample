plugins {
  id "com.google.protobuf" version "0.8.14"
}

dependencies {
  implementation "com.google.protobuf:protobuf-gradle-plugin:0.8.14"

  implementation group: 'io.netty', name: 'netty-all', version: '5.0.0.Alpha2'
  implementation group: 'com.google.protobuf', name: 'protobuf-javalite', version: '4.0.0-rc-2'

  if (JavaVersion.current().isJava9Compatible()) {
    // Workaround for @javax.annotation.Generated
    // see: https://github.com/grpc/grpc-java/issues/3633
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
  }
}

//sourceSets {
//  main {
//    proto {
//      // In addition to the default 'src/main/proto'
//      srcDir "src/main/protobuf"
//      srcDir "src/main/protocolbuffers"
//      // In addition to the default '**/*.proto' (use with caution).
//      // Using an extension other than 'proto' is NOT recommended,
//      // because when proto files are published along with class files, we can
//      // only tell the type of a file from its extension.
//      include "**/*.protodevel"
//    }
//    java {
//    }
//  }
//  test {
//    proto {
//      // In addition to the default 'src/test/proto'
//      srcDir "src/test/protocolbuffers"
//    }
//  }
//}

protobuf {
  protoc {
    // The artifact spec for the Protobuf Compiler
    artifact = "com.google.protobuf:protoc:4.0.0-rc-2"
  }

  generateProtoTasks {
    // all() returns the collection of all protoc tasks
    all().each { task ->
      // Here you can configure the task
    }

    // (Java-only) returns tasks for a sourceSet
    ofSourceSet('main')
  }
//  plugins {
//    grpc {
//      artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
//    }
//  }
//  generateProtoTasks {
//    all()*.plugins {
//      grpc {}
//    }
//    ofSourceSet('main')
//  }
}

compileJava {
  sourceCompatibility = JavaVersion.VERSION_1_8
  targetCompatibility = JavaVersion.VERSION_1_8
  options.compilerArgs += ["-proc:none"]
}

ext {
  protobufVersion = "0.8.8"
  protocVersion = ""
}
