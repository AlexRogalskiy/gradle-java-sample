plugins {
  id "com.google.protobuf" version "0.8.14"
}

dependencies {
  implementation libraries.core.protobuf_gradle
  implementation libraries.core.pgv_java
  implementation libraries.core.pgv_java_stub

  implementation libraries.core.netty
  implementation libraries.core.protobuf

  if (JavaVersion.current().isJava9Compatible()) {
    // Workaround for @javax.annotation.Generated
    // see: https://github.com/grpc/grpc-java/issues/3633
    implementation libraries.core.javax
  }
}

protobuf {
  protoc {
    // The artifact spec for the Protobuf Compiler
    artifact = "com.google.protobuf:protoc:${versions.protobuf}"
  }

  plugins {
    javapgv {
      artifact = "io.envoyproxy.protoc-gen-validate:protoc-gen-validate:${versions.protoc_gen}"
    }
  }

  generateProtoTasks {
    all()*.plugins {
      javapgv {
        option "lang=java"
      }
    }
    // (Java-only) returns tasks for a sourceSet
    ofSourceSet('main')
  }
}

sourceSets {
  main.proto.srcDirs += 'proto'
  main.proto.srcDirs += 'src/main/schema'
  test.proto.srcDirs += 'src/test/schema'
}

task sourcesJar(type: Jar, dependsOn: classes) {
  from sourceSets.main.allSource
}

compileJava {
  options.compilerArgs += ["-proc:none"]
}
