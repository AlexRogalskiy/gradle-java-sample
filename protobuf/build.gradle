plugins {
  id "com.google.protobuf" version "0.8.14"
}

ext.versions = [
  "protobuf_gradle": "0.8.14",
  "protoc_gen"     : "0.4.1",
  "netty"          : "5.0.0.Alpha2",
  "protobuf"       : "4.0.0-rc-2",
  "javax"          : "1.3.2"
]
ext.deps = [
  "protobuf_gradle": "com.google.protobuf:protobuf-gradle-plugin:${versions.protobuf_gradle}",
  "pgv_java"       : "io.envoyproxy.protoc-gen-validate:pgv-java:${versions.protoc_gen}",
  "pgv_java_stub"  : "io.envoyproxy.protoc-gen-validate:pgv-java-stub:${versions.protoc_gen}",
  "netty"          : "io.netty:netty-all:${versions.netty}",
  "protobuf"       : "com.google.protobuf:protobuf-java:${versions.protobuf}",
  "javax"          : "javax.annotation:javax.annotation-api:${versions.javax}"
]

dependencies {
  implementation deps.protobuf_gradle
  implementation deps.pgv_java
  implementation deps.pgv_java_stub

  implementation deps.netty
  implementation deps.protobuf

  if (JavaVersion.current().isJava9Compatible()) {
    // Workaround for @javax.annotation.Generated
    // see: https://github.com/grpc/grpc-java/issues/3633
    implementation deps.javax
  }
}

protobuf {
  protoc {
    // The artifact spec for the Protobuf Compiler
    artifact = "com.google.protobuf:protoc:${versions.protobuf}"
  }

  plugins {
    javapgv {
      artifact = "io.envoyproxy.protoc-gen-validate:protoc-gen-validate:${versions.protoc_gen}"
    }
  }

  generateProtoTasks {
    all()*.plugins {
      javapgv {
        option "lang=java"
      }
    }
    // (Java-only) returns tasks for a sourceSet
    ofSourceSet('main')
  }
}

sourceSets {
  main.proto.srcDirs += 'proto'
  main.proto.srcDirs += 'src/main/schema'
  test.proto.srcDirs += 'src/test/schema'
}

task sourcesJar(type: Jar, dependsOn: classes) {
  from sourceSets.main.allSource
}

compileJava {
  options.compilerArgs += ["-proc:none"]
}
