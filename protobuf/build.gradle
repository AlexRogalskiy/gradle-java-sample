plugins {
  id "com.google.protobuf" version "0.8.14"
}

ext {
  protobuf_gradle_version = '0.8.14'

  netty_version = '5.0.0.Alpha2'
  protobuf_version = '4.0.0-rc-2'
  javax_version = '1.3.2'

  protoc_gen_version = '0.4.1'
}

dependencies {
  implementation("com.google.protobuf:protobuf-gradle-plugin:${protobuf_gradle_version}")

  implementation("io.envoyproxy.protoc-gen-validate:pgv-java:0.4.1")
  implementation("io.envoyproxy.protoc-gen-validate:pgv-java-stub:0.4.1")

  implementation("io.netty:netty-all:${netty_version}")
  implementation("com.google.protobuf:protobuf-java:${protobuf_version}")

  if (JavaVersion.current().isJava9Compatible()) {
    // Workaround for @javax.annotation.Generated
    // see: https://github.com/grpc/grpc-java/issues/3633
    implementation("javax.annotation:javax.annotation-api:${javax_version}")
  }
}

protobuf {
  protoc {
    // The artifact spec for the Protobuf Compiler
    artifact = "com.google.protobuf:protoc:${protobuf_version}"
  }

  plugins {
    javapgv {
      artifact = "io.envoyproxy.protoc-gen-validate:protoc-gen-validate:${protoc_gen_version}"
    }
  }

  generateProtoTasks {
    all()*.plugins {
      javapgv {
        option "lang=java"
      }
    }
    // (Java-only) returns tasks for a sourceSet
    ofSourceSet('main')
  }
}

sourceSets {
  main.proto.srcDirs += 'proto'
  main.proto.srcDirs += 'src/main/schema'
  test.proto.srcDirs += 'src/test/schema'
}

task sourcesJar(type: Jar, dependsOn: classes) {
  from sourceSets.main.allSource
}

compileJava {
  sourceCompatibility = JavaVersion.VERSION_1_8
  targetCompatibility = JavaVersion.VERSION_1_8
  options.compilerArgs += ["-proc:none"]
}
